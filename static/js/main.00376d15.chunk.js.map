{"version":3,"sources":["components/Week.jsx","redux/store.js","components/NewEvent.jsx","components/Menu.jsx","components/Event.jsx","components/Day.jsx","components/Month.jsx","App.jsx","index.js"],"names":["getUniqueEventId","counter","uniqueIdGenerator","store","createStore","state","action","type","events","eventObj","id","filter","item","mapDispatchToProps","setEvent","connect","mark","props","useState","open","changeOpen","title","setTitle","titleFulfilled","setTitleFulfilled","date","setDate","dateFulfilled","setDateFulfilled","location","setLocation","startTime","setStartTime","endTime","setEndTime","setMark","description","setDescription","timeError","setTimeError","inputError","setInputError","Modal","size","trigger","Button","onClick","color","Content","className","Label","attached","Message","negative","Header","Form","Input","placeholder","onChange","event","target","value","min","max","TextArea","Menu","handleClickNext","activeClassName","to","deleteEvent","start_time","Card","header","meta","extra","rel","href","dateOfDay","filteredEvents","replace","length","map","key","Month","y","m","w","dayOfMonth","arr","i","d","Week","App","Date","getFullYear","getMonth","getDay","getDate","path","render","component","Day","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.00376d15.chunk.js","sourcesContent":["import React from 'react';\nimport Event from './Event';\n\nconst arr = [];\nfor (let i = 1; i <= 7; i += 1) {\n  arr[i - 1] = i;\n}\n\nconst Week = () => (\n  <>\n    {arr.length > 0\n      ? (\n        <>\n          <h2>That are events for now</h2>\n          <div className=\"calendar calendar__week\">\n            {arr.map((item) => (\n              <Event\n                key={item.id}\n                id={item.id}\n                description={item.description}\n                location={item.location}\n                start_time={item.startTime}\n                title={item.title}\n              />\n            ))}\n          </div>\n        </>\n      )\n      : (\n        <h2>There is no event for this day</h2>\n      )}\n  </>\n);\n\nexport default Week;\n","import { createStore } from 'redux';\n\nconst SET_EVENT = 'SET_EVENT';\nconst DELETE_EVENT = 'DELETE_EVENT';\n\nexport const setEvent = (eventObj) => ({ type: SET_EVENT, eventObj });\nexport const deleteEvent = (id) => ({ type: DELETE_EVENT, id });\n\nconst uniqueIdGenerator = () => {\n  let counter = 0;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n};\n\nconst getUniqueEventId = uniqueIdGenerator();\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case SET_EVENT:\n      return {\n        ...state,\n        events: [...state.events, { ...action.eventObj, id: getUniqueEventId() }],\n      };\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: state.events.filter((item) => item.id !== action.id),\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  events: [],\n};\n\nconst store = createStore(rootReducer, initialState);\nexport default store;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button, Modal, Input, Form, TextArea, Label, Message,\n} from 'semantic-ui-react';\nimport { setEvent } from '../redux/store';\n\nconst NewEvent = (props) => {\n  // eslint-disable-next-line no-shadow,react/prop-types\n  const { setEvent } = props;\n\n  const [open, changeOpen] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [titleFulfilled, setTitleFulfilled] = useState(false);\n  const [date, setDate] = useState(null);\n  const [dateFulfilled, setDateFulfilled] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [startTime, setStartTime] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [mark, setMark] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [timeError, setTimeError] = useState(false);\n  const [inputError, setInputError] = useState(false);\n\n  const handleTimes = () => {\n    // startTime.replace(':', '') + 0;\n    if (startTime > endTime) {\n      setTimeError(true);\n    } else {\n      setTimeError(false);\n    }\n  };\n\n  const handleSubmit = () => {\n    if (titleFulfilled && dateFulfilled) {\n      setInputError(false);\n      changeOpen(false);\n      setEvent({\n        title,\n        date,\n        location,\n        startTime,\n        endTime,\n        mark,\n        description,\n      });\n      setTitleFulfilled(false);\n      setDateFulfilled(false);\n    } else {\n      setInputError(true);\n    }\n  };\n\n  return (\n    <Modal size=\"mini\" open={open} trigger={<Button onClick={() => changeOpen(true)} color=\"green\">Create new</Button>}>\n      <Modal.Content className=\"create-event\">\n        <Label attached=\"top\">Create new event</Label>\n        {timeError\n        && (\n          <Message negative>\n            <Message.Header>Input time error</Message.Header>\n            <p>End time should be after start time</p>\n          </Message>\n        )}\n        {inputError\n        && (\n          <Message negative>\n            <Message.Header>Inputs fill error</Message.Header>\n            <p>Fulfill as minimum Title and Date inputs</p>\n          </Message>\n        )}\n        <Form>\n          <Input\n            type=\"text\"\n            placeholder=\"Title\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setTitleFulfilled(true);\n            }}\n          />\n          <Input\n            type=\"date\"\n            onChange={(event) => {\n              setDate(event.target.value);\n              setDateFulfilled(true);\n            }}\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"Location\"\n            onChange={(event) => (setLocation(event.target.value))}\n          />\n          <Input\n            type=\"time\"\n            min=\"00:00\"\n            max=\"23:59\"\n            onChange={(event) => (setStartTime(event.target.value))}\n          />\n          <Input\n            type=\"time\"\n            min=\"00:00\"\n            max=\"23:59\"\n            onChange={(event) => (setEndTime(event.target.value))}\n          />\n\n          <datalist\n            id=\"importance\"\n            onChange={(event) => setMark(event.target.value)}\n          >\n            <option value=\"red\">Most importance</option>\n            <option value=\"orange\">You are not sure about importance</option>\n            <option value=\"blue\">Your personal events</option>\n            <option value=\"grey\">Just as reminder</option>\n          </datalist>\n\n          <TextArea\n            className=\"ui textarea\"\n            onChange={((event) => (setDescription(event.target.value)))}\n            placeholder=\"Description\"\n          />\n        </Form>\n\n        <Button\n          color=\"violet\"\n          onClick={() => {\n            handleSubmit();\n            handleTimes();\n          }}\n        >\n          Submit\n        </Button>\n        <Button onClick={() => changeOpen(false)} color=\"red\">Close</Button>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapDispatchToProps = {\n  setEvent,\n};\n\nconst mapStateToProps = (state) => ({\n  events: state.events,\n  mark: state.mark,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEvent);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport NewEvent from './NewEvent';\n\nconst Menu = () => {\n  const handleClickNext = (event) => {\n\n  };\n\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav__arrows\">\n        <div\n          className=\"ui basic button nav__arrows--left\"\n          onClick={handleClickNext()}\n        >\n          {'<'}\n        </div>\n        <div\n          className=\"ui basic button nav__arrows--right\"\n        >\n          {'>'}\n        </div>\n      </div>\n      <div className=\"nav__current-date\">\n        18 jan\n      </div>\n      <div className=\"nav__right-block\">\n        <div className=\"nav__links block\">\n          <NavLink\n            className=\"nav__links\"\n            activeClassName=\"nav__link--active\"\n            to=\"month\"\n          >\n            Month\n          </NavLink>\n          <NavLink\n            className=\"nav__links\"\n            activeClassName=\"nav__links--active\"\n            to=\"week\"\n          >\n            Week\n          </NavLink>\n          <NavLink\n            className=\"nav__links\"\n            activeClassName=\"nav__link--active\"\n            to=\"day\"\n          >\n            Day\n          </NavLink>\n        </div>\n        <div className=\"nav__create-button\">\n          <NewEvent />\n        </div>\n      </div>\n    </nav>\n  );\n};\nexport default Menu;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card } from 'semantic-ui-react';\nimport { deleteEvent } from '../redux/store';\n\n\nconst Event = ({\n  id, title, start_time, location, description, deleteEvent,\n}) => (\n  <Card\n    id={id}\n    header={title}\n    meta={start_time}\n    extra={(<a rel=\"noopener noreferrer\" target=\"_blank\" href={`https://www.google.com/maps/place/${location}`}>{location}</a>)}\n    meta={<Button negative onClick={() => deleteEvent(id)}>Delete</Button>}\n    description={description}\n  />\n);\n\nexport default connect(() => ({}), { deleteEvent })(Event);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'semantic-ui-react';\nimport Event from './Event';\n\nconst Day = ({ dateOfDay, events }) => {\n  const filteredEvents = events.filter(item => {\n    const reg = /-0/g;\n    const newMyDate = item.date.replace(reg, '-');\n    return newMyDate === dateOfDay;\n  });\n\n  return (\n    <Modal\n      size=\"mini\"\n      trigger={(\n        <div className=\"day\">\n          <div className={filteredEvents.length > 0 ? 'dot' : ' '} />\n        </div>\n    )}\n    >\n      <Modal.Content>\n        {filteredEvents.length > 0\n          ? (\n            <>\n              <h2>That are events for now</h2>\n              {filteredEvents.map((item) => (\n                <Event\n                  key={item.id}\n                  id={item.id}\n                  description={item.description}\n                  location={item.location}\n                  start_time={item.startTime}\n                  title={item.title}\n                />\n              ))}\n            </>\n          )\n          : (\n            <h2>There is no event for this day</h2>\n          )}\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  events: state.events,\n});\n\nexport default connect(mapStateToProps, {})(Day);\n","import React from 'react';\nimport Day from './Day';\n\n\nconst Month = ({y, m, w, dayOfMonth}) => {\n  const arr = [];\n  for (let i = 1; i <= dayOfMonth; i += 1) {\n    arr[i - 1] = i;\n  }\n\n  return (\n    <>\n      <div className={`calendar calendar__month-${dayOfMonth} calendar__month-weekStart-${w}`}>\n        {arr.map((d) => (\n          <Day key={d} dateOfDay={`${y}-${m}-${d}`} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Month;\n","import React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Switch, Route } from 'react-router-dom';\nimport './styles/main.scss';\nimport Menu from './components/Menu';\nimport Month from './components/Month';\nimport Week from './components/Week';\nimport Day from './components/Day';\n\nconst App = () => {\n  const y = new Date().getFullYear();\n  const m = new Date().getMonth() + 1;\n  const w = new Date(y, m - 1, 1).getDay();\n\n  const dayOfMonth = 32 - new Date(y, m - 1, 32).getDate();\n\n\n  return (\n    <div className=\"main\">\n      <header className=\"header\">\n        <Menu />\n      </header>\n\n      <div className=\"components-wrapper\">\n        <main className=\"components\">\n          <Switch>\n            <Route\n              path=\"/month\"\n              render={() => (<Month y={y} m={m} w={w} dayOfMonth={dayOfMonth} />)}\n            />\n            <Route\n              path=\"/week\"\n              component={Week}\n            />\n            <Route\n              path=\"/day\"\n              component={Day}\n            />\n          </Switch>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// eslint-disable-next-line import/extensions\nimport App from './App.jsx';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}